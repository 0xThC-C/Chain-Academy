[profile.default]
# Solidity compiler version
solc = "0.8.28"

# EVM version for compatibility
evm_version = "cancun"

# Source and build directories
src = "contracts"
out = "out"
libs = ["lib"]
test = "test/foundry"
cache_path = "cache/foundry"

# Optimizer settings
optimizer = true
optimizer_runs = 1_000_000

# For deterministic deployments
bytecode_hash = "none"
cbor_metadata = false

# Enable CREATE2 factory
always_use_create_2_factory = true

# Gas limit for tests
gas_limit = "18446744073709551615"

# Auto-detect dependencies
auto_detect_solc = false

# Filesystem permissions
fs_permissions = [
    { access = "read-write", path = "./deployments" },
    { access = "read", path = "./out" },
]

# RPC endpoints for forking and deployment
[rpc_endpoints]
mainnet = "${MAINNET_RPC_URL}"
sepolia = "${SEPOLIA_RPC_URL}"
polygon = "${POLYGON_RPC_URL}"
mumbai = "${MUMBAI_RPC_URL}"
arbitrum = "${ARBITRUM_RPC_URL}"
arbitrum_sepolia = "${ARBITRUM_SEPOLIA_RPC_URL}"
optimism = "${OPTIMISM_RPC_URL}"
optimism_sepolia = "${OPTIMISM_SEPOLIA_RPC_URL}"
base = "${BASE_RPC_URL}"
base_sepolia = "${BASE_SEPOLIA_RPC_URL}"

# Etherscan API keys for verification
[etherscan]
mainnet = { key = "${ETHERSCAN_API_KEY}" }
sepolia = { key = "${ETHERSCAN_API_KEY}" }
polygon = { key = "${POLYGONSCAN_API_KEY}" }
mumbai = { key = "${POLYGONSCAN_API_KEY}" }
arbitrum = { key = "${ARBISCAN_API_KEY}" }
arbitrum_sepolia = { key = "${ARBISCAN_API_KEY}" }
optimism = { key = "${OPTIMISTIC_ETHERSCAN_API_KEY}" }
optimism_sepolia = { key = "${OPTIMISTIC_ETHERSCAN_API_KEY}" }
base = { key = "${BASESCAN_API_KEY}" }
base_sepolia = { key = "${BASESCAN_API_KEY}" }

# Fuzz testing configuration
[fuzz]
runs = 1000
max_test_rejects = 65536
seed = '0x1'
dictionary_weight = 40
include_storage = true
include_push_bytes = true
failure_persist_dir = "cache/fuzz"

# Invariant testing configuration
[invariant]
runs = 256
depth = 15
fail_on_revert = false
call_override = false
dictionary_weight = 80
include_storage = true
include_push_bytes = true
shrink_run_limit = 5000
failure_persist_dir = "cache/invariant"

# CI profile for faster testing
[profile.ci]
fuzz = { runs = 10000 }
invariant = { runs = 1000 }

# Coverage profile
[profile.coverage]
via_ir = false

# Intense profile for thorough testing
[profile.intense]
fuzz = { runs = 50000 }
invariant = { runs = 1000, depth = 50 }

# Local development profile
[profile.local]
optimizer = false
verbosity = 2

# Gas reporting
[fmt]
line_length = 100
tab_width = 4
bracket_spacing = true
int_types = "short"
version: '3.8'

services:
  payment-bot:
    build: .
    container_name: chain-academy-payment-bot
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - bot-network

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: ca-bot-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - bot-network
    profiles:
      - monitoring

  # Optional: Grafana for metrics visualization  
  grafana:
    image: grafana/grafana:latest
    container_name: ca-bot-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - bot-network
    profiles:
      - monitoring

  # Optional: PostgreSQL for persistent logging
  postgres:
    image: postgres:15-alpine
    container_name: ca-bot-postgres
    environment:
      - POSTGRES_DB=chainacademy_bot
      - POSTGRES_USER=botuser
      - POSTGRES_PASSWORD=secure_password_here
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bot-network
    profiles:
      - database

volumes:
  grafana-data:
  postgres-data:

networks:
  bot-network:
    driver: bridge
{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformFeeRecipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "newRecipient",
          "type": "address"
        }
      ],
      "name": "PlatformFeeRecipientUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sessionId",
          "type": "uint256"
        }
      ],
      "name": "SessionCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sessionId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "mentorAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "platformAmount",
          "type": "uint256"
        }
      ],
      "name": "SessionCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "sessionId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mentor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "mentee",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "SessionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MENTOR_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PERCENTAGE_BASE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PLATFORM_FEE_PERCENTAGE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "addSupportedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sessionId",
          "type": "uint256"
        }
      ],
      "name": "cancelSession",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sessionId",
          "type": "uint256"
        }
      ],
      "name": "completeSession",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mentor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createSession",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mentee",
          "type": "address"
        }
      ],
      "name": "getMenteeSessions",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "mentor",
          "type": "address"
        }
      ],
      "name": "getMentorSessions",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sessionId",
          "type": "uint256"
        }
      ],
      "name": "getSession",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "mentor",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "mentee",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "paymentToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "enum Mentorship.SessionStatus",
              "name": "status",
              "type": "uint8"
            }
          ],
          "internalType": "struct Mentorship.MentorshipSession",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "menteeSessions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "mentorSessions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextSessionId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformFeeRecipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "removeSupportedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "sessions",
      "outputs": [
        {
          "internalType": "address",
          "name": "mentor",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "mentee",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "enum Mentorship.SessionStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "supportedTokens",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newRecipient",
          "type": "address"
        }
      ],
      "name": "updatePlatformFeeRecipient",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7fdeb5a755b1f9d7b50646424d9e3fa1d673ecebe4aa799dc3073c03411a9a2e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1137602",
    "logsBloom": "0x
    "blockHash": "0xbe660adcbdaca753bfba9ed08a0823d4ec591759393df4b3a17e856d44c6d5af",
    "transactionHash": "0x7fdeb5a755b1f9d7b50646424d9e3fa1d673ecebe4aa799dc3073c03411a9a2e",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0x7fdeb5a755b1f9d7b50646424d9e3fa1d673ecebe4aa799dc3073c03411a9a2e",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xbe660adcbdaca753bfba9ed08a0823d4ec591759393df4b3a17e856d44c6d5af"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "1137602",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x85Fa7c0482F3e965099B8B564511c1D0f5e2b20c"
  ],
  "numDeployments": 1,
  "solcInputHash": "a485aa0f5bd4c04a3aa02b83b2636432",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformFeeRecipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"PlatformFeeRecipientUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"name\":\"SessionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"mentorAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"platformAmount\",\"type\":\"uint256\"}],\"name\":\"SessionCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mentor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"mentee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"SessionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MENTOR_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERCENTAGE_BASE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PLATFORM_FEE_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"addSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"name\":\"cancelSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"name\":\"completeSession\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mentor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createSession\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mentee\",\"type\":\"address\"}],\"name\":\"getMenteeSessions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mentor\",\"type\":\"address\"}],\"name\":\"getMentorSessions\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sessionId\",\"type\":\"uint256\"}],\"name\":\"getSession\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"mentor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mentee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"enum Mentorship.SessionStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct Mentorship.MentorshipSession\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"menteeSessions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"mentorSessions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextSessionId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformFeeRecipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"removeSupportedToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"sessions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"mentor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"mentee\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"enum Mentorship.SessionStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRecipient\",\"type\":\"address\"}],\"name\":\"updatePlatformFeeRecipient\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for Chain Academy V2 mentorship platform Handles escrow, payment distribution, and multi-token support\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"addSupportedToken(address)\":{\"details\":\"Add a supported payment token\",\"params\":{\"token\":\"Address of the token to add\"}},\"cancelSession(uint256)\":{\"details\":\"Cancel a mentorship session before it starts\",\"params\":{\"sessionId\":\"ID of the session to cancel\"}},\"completeSession(uint256)\":{\"details\":\"Complete a mentorship session and distribute payments\",\"params\":{\"sessionId\":\"ID of the session to complete\"}},\"constructor\":{\"details\":\"Constructor\",\"params\":{\"_platformFeeRecipient\":\"Address to receive platform fees\"}},\"createSession(address,address,uint256,uint256,uint256)\":{\"details\":\"Create a new mentorship session with escrow\",\"params\":{\"amount\":\"Payment amount\",\"duration\":\"Session duration in seconds\",\"mentor\":\"Address of the mentor\",\"paymentToken\":\"Address of the payment token (USDT/USDC)\",\"startTime\":\"Session start time\"}},\"getMenteeSessions(address)\":{\"details\":\"Get mentee's session IDs\",\"params\":{\"mentee\":\"Address of the mentee\"}},\"getMentorSessions(address)\":{\"details\":\"Get mentor's session IDs\",\"params\":{\"mentor\":\"Address of the mentor\"}},\"getSession(uint256)\":{\"details\":\"Get session details\",\"params\":{\"sessionId\":\"ID of the session\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Pause the contract\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeSupportedToken(address)\":{\"details\":\"Remove a supported payment token\",\"params\":{\"token\":\"Address of the token to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Unpause the contract\"},\"updatePlatformFeeRecipient(address)\":{\"details\":\"Update platform fee recipient\",\"params\":{\"newRecipient\":\"New recipient address\"}}},\"title\":\"Mentorship\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Mentorship.sol\":\"Mentorship\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @title IERC1363\\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\\n *\\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\\n */\\ninterface IERC1363 is IERC20, IERC165 {\\n    /*\\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\\n     * 0xb0202a11 ===\\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\\n     */\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\\n     * @param from The address which you want to send tokens from.\\n     * @param to The address which you want to transfer to.\\n     * @param value The amount of tokens to be transferred.\\n     * @param data Additional data with no specified format, sent in call to `to`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\\n     * @param spender The address which will spend the funds.\\n     * @param value The amount of tokens to be spent.\\n     * @param data Additional data with no specified format, sent in call to `spender`.\\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\\n     */\\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../token/ERC20/IERC20.sol\\\";\\n\",\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\nimport {IERC1363} from \\\"../../../interfaces/IERC1363.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    /**\\n     * @dev An operation with an ERC-20 token failed.\\n     */\\n    error SafeERC20FailedOperation(address token);\\n\\n    /**\\n     * @dev Indicates a failed `decreaseAllowance` request.\\n     */\\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\\n    }\\n\\n    /**\\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\\n     */\\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        forceApprove(token, spender, oldAllowance + value);\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\\n     * value, non-reverting calls are assumed to be successful.\\n     *\\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \\\"client\\\"\\n     * smart contract uses ERC-7674 to set temporary allowances, then the \\\"client\\\" smart contract should avoid using\\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\\n        unchecked {\\n            uint256 currentAllowance = token.allowance(address(this), spender);\\n            if (currentAllowance < requestedDecrease) {\\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\\n            }\\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\\n     * to be set to zero before setting it to a non-zero value, such as USDT.\\n     *\\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\\n     * only sets the \\\"standard\\\" allowance. Any temporary allowance will remain active, in addition to the value being\\n     * set here.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            safeTransfer(token, to, value);\\n        } else if (!token.transferAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function transferFromAndCallRelaxed(\\n        IERC1363 token,\\n        address from,\\n        address to,\\n        uint256 value,\\n        bytes memory data\\n    ) internal {\\n        if (to.code.length == 0) {\\n            safeTransferFrom(token, from, to, value);\\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\\n     * targeting contracts.\\n     *\\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\\n     * once without retrying, and relies on the returned value to be true.\\n     *\\n     * Reverts if the returned value is other than `true`.\\n     */\\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\\n        if (to.code.length == 0) {\\n            forceApprove(token, to, value);\\n        } else if (!token.approveAndCall(to, value, data)) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            // bubble errors\\n            if iszero(success) {\\n                let ptr := mload(0x40)\\n                returndatacopy(ptr, 0, returndatasize())\\n                revert(ptr, returndatasize())\\n            }\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n\\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\\n            revert SafeERC20FailedOperation(address(token));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        bool success;\\n        uint256 returnSize;\\n        uint256 returnValue;\\n        assembly (\\\"memory-safe\\\") {\\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\\n            returnSize := returndatasize()\\n            returnValue := mload(0)\\n        }\\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\\n    }\\n}\\n\",\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\\n * consider using {ReentrancyGuardTransient} instead.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant NOT_ENTERED = 1;\\n    uint256 private constant ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    /**\\n     * @dev Unauthorized reentrant call.\\n     */\\n    error ReentrancyGuardReentrantCall();\\n\\n    constructor() {\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\\n        if (_status == ENTERED) {\\n            revert ReentrancyGuardReentrantCall();\\n        }\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/Mentorship.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title Mentorship\\n * @dev Smart contract for Chain Academy V2 mentorship platform\\n * Handles escrow, payment distribution, and multi-token support\\n */\\ncontract Mentorship is ReentrancyGuard, Pausable, Ownable {\\n    using SafeERC20 for IERC20;\\n\\n    // Constants\\n    uint256 public constant PLATFORM_FEE_PERCENTAGE = 10; // 10%\\n    uint256 public constant MENTOR_PERCENTAGE = 90; // 90%\\n    uint256 public constant PERCENTAGE_BASE = 100;\\n\\n    // Supported payment tokens\\n    mapping(address => bool) public supportedTokens;\\n    \\n    // Platform fee recipient\\n    address public platformFeeRecipient;\\n\\n    // Mentorship session structure\\n    struct MentorshipSession {\\n        address mentor;\\n        address mentee;\\n        address paymentToken;\\n        uint256 amount;\\n        uint256 startTime;\\n        uint256 duration;\\n        SessionStatus status;\\n    }\\n\\n    // Session status enum\\n    enum SessionStatus {\\n        None,\\n        Scheduled,\\n        Completed,\\n        Cancelled,\\n        Disputed\\n    }\\n\\n    // Session counter for unique IDs\\n    uint256 public nextSessionId;\\n\\n    // Mapping from session ID to session details\\n    mapping(uint256 => MentorshipSession) public sessions;\\n\\n    // Mapping from mentor address to their session IDs\\n    mapping(address => uint256[]) public mentorSessions;\\n\\n    // Mapping from mentee address to their session IDs\\n    mapping(address => uint256[]) public menteeSessions;\\n\\n    // Events\\n    event SessionCreated(\\n        uint256 indexed sessionId,\\n        address indexed mentor,\\n        address indexed mentee,\\n        address paymentToken,\\n        uint256 amount,\\n        uint256 startTime,\\n        uint256 duration\\n    );\\n\\n    event SessionCompleted(\\n        uint256 indexed sessionId,\\n        uint256 mentorAmount,\\n        uint256 platformAmount\\n    );\\n\\n    event SessionCancelled(uint256 indexed sessionId);\\n\\n    event TokenAdded(address indexed token);\\n    event TokenRemoved(address indexed token);\\n    event PlatformFeeRecipientUpdated(address indexed newRecipient);\\n\\n    // Modifiers\\n    modifier onlyValidToken(address token) {\\n        require(supportedTokens[token], \\\"Token not supported\\\");\\n        _;\\n    }\\n\\n    modifier onlySessionParticipant(uint256 sessionId) {\\n        MentorshipSession storage session = sessions[sessionId];\\n        require(\\n            msg.sender == session.mentor || msg.sender == session.mentee,\\n            \\\"Not session participant\\\"\\n        );\\n        _;\\n    }\\n\\n    /**\\n     * @dev Constructor\\n     * @param _platformFeeRecipient Address to receive platform fees\\n     */\\n    constructor(address _platformFeeRecipient) Ownable(msg.sender) {\\n        require(_platformFeeRecipient != address(0), \\\"Invalid fee recipient\\\");\\n        platformFeeRecipient = _platformFeeRecipient;\\n    }\\n\\n    /**\\n     * @dev Create a new mentorship session with escrow\\n     * @param mentor Address of the mentor\\n     * @param paymentToken Address of the payment token (USDT/USDC)\\n     * @param amount Payment amount\\n     * @param startTime Session start time\\n     * @param duration Session duration in seconds\\n     */\\n    function createSession(\\n        address mentor,\\n        address paymentToken,\\n        uint256 amount,\\n        uint256 startTime,\\n        uint256 duration\\n    ) external nonReentrant whenNotPaused onlyValidToken(paymentToken) returns (uint256) {\\n        require(mentor != address(0) && mentor != msg.sender, \\\"Invalid mentor\\\");\\n        require(amount > 0, \\\"Invalid amount\\\");\\n        require(startTime > block.timestamp, \\\"Invalid start time\\\");\\n        require(duration > 0, \\\"Invalid duration\\\");\\n\\n        // Create session FIRST (checks-effects-interactions pattern)\\n        uint256 sessionId = nextSessionId++;\\n        sessions[sessionId] = MentorshipSession({\\n            mentor: mentor,\\n            mentee: msg.sender,\\n            paymentToken: paymentToken,\\n            amount: amount,\\n            startTime: startTime,\\n            duration: duration,\\n            status: SessionStatus.Scheduled\\n        });\\n\\n        // Add to participant mappings\\n        mentorSessions[mentor].push(sessionId);\\n        menteeSessions[msg.sender].push(sessionId);\\n\\n        // Transfer tokens to escrow LAST (after all state changes)\\n        IERC20(paymentToken).safeTransferFrom(msg.sender, address(this), amount);\\n\\n        emit SessionCreated(\\n            sessionId,\\n            mentor,\\n            msg.sender,\\n            paymentToken,\\n            amount,\\n            startTime,\\n            duration\\n        );\\n\\n        return sessionId;\\n    }\\n\\n    /**\\n     * @dev Complete a mentorship session and distribute payments\\n     * @param sessionId ID of the session to complete\\n     */\\n    function completeSession(uint256 sessionId) \\n        external \\n        nonReentrant \\n        onlySessionParticipant(sessionId) \\n    {\\n        MentorshipSession storage session = sessions[sessionId];\\n        require(session.status == SessionStatus.Scheduled, \\\"Invalid session status\\\");\\n        require(\\n            block.timestamp >= session.startTime + session.duration,\\n            \\\"Session not finished\\\"\\n        );\\n\\n        session.status = SessionStatus.Completed;\\n\\n        // Calculate payment distribution\\n        uint256 platformAmount = (session.amount * PLATFORM_FEE_PERCENTAGE) / PERCENTAGE_BASE;\\n        uint256 mentorAmount = session.amount - platformAmount;\\n\\n        // Transfer payments\\n        IERC20(session.paymentToken).safeTransfer(session.mentor, mentorAmount);\\n        IERC20(session.paymentToken).safeTransfer(platformFeeRecipient, platformAmount);\\n\\n        emit SessionCompleted(sessionId, mentorAmount, platformAmount);\\n    }\\n\\n    /**\\n     * @dev Cancel a mentorship session before it starts\\n     * @param sessionId ID of the session to cancel\\n     */\\n    function cancelSession(uint256 sessionId) \\n        external \\n        nonReentrant \\n        onlySessionParticipant(sessionId) \\n    {\\n        MentorshipSession storage session = sessions[sessionId];\\n        require(session.status == SessionStatus.Scheduled, \\\"Invalid session status\\\");\\n        require(block.timestamp < session.startTime, \\\"Session already started\\\");\\n\\n        session.status = SessionStatus.Cancelled;\\n\\n        // Refund mentee\\n        IERC20(session.paymentToken).safeTransfer(session.mentee, session.amount);\\n\\n        emit SessionCancelled(sessionId);\\n    }\\n\\n    /**\\n     * @dev Add a supported payment token\\n     * @param token Address of the token to add\\n     */\\n    function addSupportedToken(address token) external onlyOwner {\\n        require(token != address(0), \\\"Invalid token address\\\");\\n        supportedTokens[token] = true;\\n        emit TokenAdded(token);\\n    }\\n\\n    /**\\n     * @dev Remove a supported payment token\\n     * @param token Address of the token to remove\\n     */\\n    function removeSupportedToken(address token) external onlyOwner {\\n        supportedTokens[token] = false;\\n        emit TokenRemoved(token);\\n    }\\n\\n    /**\\n     * @dev Update platform fee recipient\\n     * @param newRecipient New recipient address\\n     */\\n    function updatePlatformFeeRecipient(address newRecipient) external onlyOwner {\\n        require(newRecipient != address(0), \\\"Invalid recipient\\\");\\n        platformFeeRecipient = newRecipient;\\n        emit PlatformFeeRecipientUpdated(newRecipient);\\n    }\\n\\n    /**\\n     * @dev Pause the contract\\n     */\\n    function pause() external onlyOwner {\\n        _pause();\\n    }\\n\\n    /**\\n     * @dev Unpause the contract\\n     */\\n    function unpause() external onlyOwner {\\n        _unpause();\\n    }\\n\\n    /**\\n     * @dev Get mentor's session IDs\\n     * @param mentor Address of the mentor\\n     */\\n    function getMentorSessions(address mentor) external view returns (uint256[] memory) {\\n        return mentorSessions[mentor];\\n    }\\n\\n    /**\\n     * @dev Get mentee's session IDs\\n     * @param mentee Address of the mentee\\n     */\\n    function getMenteeSessions(address mentee) external view returns (uint256[] memory) {\\n        return menteeSessions[mentee];\\n    }\\n\\n    /**\\n     * @dev Get session details\\n     * @param sessionId ID of the session\\n     */\\n    function getSession(uint256 sessionId) external view returns (MentorshipSession memory) {\\n        return sessions[sessionId];\\n    }\\n}\",\"keccak256\":\"0x283e6a083e66f38c91d923f5e06e02dda209813bfa90161342b3ab1cf026f5fa\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60803461013657601f61139738819003918201601f19168301916001600160401b0383118484101761013b5780849260209460405283398101031261013657516001600160a01b0380821691829003610136576001600055331561011d5760018054610100600160a81b0319811633600881811b610100600160a81b0316929092179093556040519391901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a381156100db5750600380546001600160a01b03191691909117905560405161124590816101528239f35b62461bcd60e51b815260206004820152601560248201527f496e76616c69642066656520726563697069656e7400000000000000000000006044820152606490fd5b604051631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604081815260048036101561001557600080fd5b600092833560e01c9081631554823214610f2d575080631f5754c014610d885780633f4ba83a14610d1f578063402ff0db14610c0857806349bbf7da14610beb57806357520d2014610b775780635c975abb14610b53578063664ba84b14610b0b57806367b3fcb014610aef57806368c4ac2614610ab15780636d69fcaf14610a07578063715018a6146109a6578063763191901461094057806383c4b7a3146108c05780638456cb591461086657806387c139431461084a5780638da5cb5b1461081d578063ab3dd949146107c4578063cd2bf12414610460578063e27f93701461031d578063eb13554f146102f4578063ec59877e1461026e578063f2fde38b146101d25763f5fe7f711461012b57600080fd5b346101ce5760203660031901126101ce57610144610f6b565b61014c610fef565b6001600160a01b0316918215610197575050600380546001600160a01b031916821790557fba887708e7d4436dd36b62187bdced03e0b9abe66caf392a66dd84386641b2098280a280f35b906020606492519162461bcd60e51b83528201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152fd5b8280fd5b50346101ce5760203660031901126101ce576101ec610f6b565b6101f4610fef565b6001600160a01b0381811693909290841561025857505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101859052602490fd5b5050346102f057602090816003193601126101ce576001600160a01b03610293610f6b565b168352600782528083209281518093808654928381520195835280832092905b8282106102d9576102d586866102cb828b0383611050565b5191829182610f86565b0390f35b8354875295860195600193840193909101906102b3565b5080fd5b5050346102f057816003193601126102f05760035490516001600160a01b039091168152602090f35b508290346102f05760203660031901126102f05780359061033c611132565b818352600560205283832080546001600160a01b03929161036c9184163314908490821561044f575b5050611155565b828452600560205284842090600682019081549060ff8216600581101561043c57600161039991146111a1565b808401544210156103f957509060036103ce94939260ff191617905560038260028301541692600183015416910154916111e6565b7f83db11557caa3518e394ee3589033b042b4f03f0ed0495a829208e71bfa37f058280a26001815580f35b606490602089519162461bcd60e51b8352820152601760248201527f53657373696f6e20616c726561647920737461727465640000000000000000006044820152fd5b634e487b7160e01b885260218252602488fd5b600191925001541633148388610365565b50346101ce5760a03660031901126101ce5761047a610f6b565b6001600160a01b03939092906024803586811691908290036101ce5760443594606495863590608435926104ac611132565b6104b4611114565b85875260209960028b5260ff89892054161561078d578b169485151580610783575b1561075157821561071f57428411156106e95784156106b5578154996000198b146106a3578888888f8f968f96988f969160059a8c9360018f96888f8f8f8f8f918f9196808f96988f96958f969a8f9b60069c8e8801905583519b61053a8d61101e565b8c52808c0196338852848d0198895260608d01998a5260808d019a8b5260a08d019b8c5260c08d019e8f5283525220975116916bffffffffffffffffffffffff60a01b9283895416178855816001890191511683825416179055600287019251169082541617905551600384015551878301555160058201550190519d8e1015610691578c9d60ff8019835416911617905586895260068c526105df8b8b8b20611072565b33895260078c526105f28b8b8b20611072565b83818b519e8f906323b872dd60e01b90820152338582015230604482015201528c5260a08c01918c831067ffffffffffffffff8411176106805750508798999a6106409160019952866110ac565b875194855289850152868401526060830152857fafb30f2fb7b1a22d2c1ebce5ade2b90ae0f6d539e804ce2e60f6a900ac3a4b4960803394a45551908152f35b634e487b7160e01b89526041905287fd5b634e487b7160e01b8a5260218452828afd5b50634e487b7160e01b88526011825287fd5b885162461bcd60e51b81529182018b90526010908201526f24b73b30b634b210323ab930ba34b7b760811b60448201528890fd5b885162461bcd60e51b81529182018b905260129082015271496e76616c69642073746172742074696d6560701b60448201528890fd5b885162461bcd60e51b81529182018b9052600e908201526d125b9d985b1a5908185b5bdd5b9d60921b60448201528890fd5b885162461bcd60e51b81529182018b9052600e908201526d24b73b30b634b21036b2b73a37b960911b60448201528890fd5b50338614156104d6565b885162461bcd60e51b81528083018c905260138188015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201528a90fd5b5050346102f057806003193601126102f0576107de610f6b565b6001600160a01b0316825260066020528082208054602435939084101561081a575060209261080c91610fc1565b91905490519160031b1c8152f35b80fd5b5050346102f057816003193601126102f057600154905160089190911c6001600160a01b03168152602090f35b5050346102f057816003193601126102f0576020905160648152f35b5050346102f057816003193601126102f05760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916108a4610fef565b6108ac611114565b600160ff198154161760015551338152a180f35b5090346101ce5760203660031901126101ce578061093e9160e0948435815260056020522060018060a01b0391828254169483600184015416936002840154166003840154918401549260ff600660058701549601541695815198895260208901528701526060860152608085015260a084015260c0830190610f48565bf35b5050346102f05760203660031901126102f05761095b610f6b565b610963610fef565b6001600160a01b03168083526002602052908220805460ff191690557f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd38280a280f35b833461081a578060031936011261081a576109bf610fef565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5090346101ce5760203660031901126101ce57610a22610f6b565b610a2a610fef565b6001600160a01b0316918215610a77575081835260026020528220805460ff191660011790557f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a48280a280f35b6020606492519162461bcd60e51b83528201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152fd5b5050346102f05760203660031901126102f05760209160ff9082906001600160a01b03610adc610f6b565b1681526002855220541690519015158152f35b5050346102f057816003193601126102f05760209051605a8152f35b5050346102f057806003193601126102f057610b25610f6b565b6001600160a01b0316825260076020528082208054602435939084101561081a575060209261080c91610fc1565b5050346102f057816003193601126102f05760209060ff6001541690519015158152f35b5050346102f057602090816003193601126101ce576001600160a01b03610b9c610f6b565b168352600682528083209281518093808654928381520195835280832092905b828210610bd4576102d586866102cb828b0383611050565b835487529586019560019384019390910190610bbc565b50346101ce57826003193601126101ce5760209250549051908152f35b50913461081a57602036600319011261081a578060c08351610c298161101e565b82815282602082015282858201528260608201528260808201528260a08201520152823581526005602052818120825192610c638461101e565b60018060a01b0380835416855280600184015416916020860192835281600285015416918187019283526003850154926060880193845288860154946080890195865260ff600660058901549860a08c01998a5201541660c08a01986005821015610d0c5760e08b61093e8c8c8c8c8c8c8c818d8d89528185519b51168b52511660208a01525116908701525160608601525160808501525160a08401525160c0830190610f48565b634e487b7160e01b815260218c52602490fd5b50346101ce57826003193601126101ce57610d38610fef565b6001549060ff821615610d7a575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b509190346102f05760203660031901126102f057823590610da7611132565b818352600560205280832080546001600160a01b0391610dd591831633149083908215610f1c575050611155565b828452600560205281842060068101805460ff81166005811015610f09576001610dff91146111a1565b8783015460058401548101809111610ef6574210610ebc5760029060ff1916179055600381015491600a8302838104600a1484151715610ea9576064900491828403938411610ea957828285949383610e8a7fdd106c9c3f24f80fe23b63d807dbc109af232921a35b6df85d12be9877f8ab3599986002610e979701928480855416915416906111e6565b54169060035416906111e6565b82519182526020820152a26001815580f35b634e487b7160e01b875260118852602487fd5b845162461bcd60e51b81526020818a0152601460248201527314d95cdcda5bdb881b9bdd08199a5b9a5cda195960621b6044820152606490fd5b634e487b7160e01b885260118952602488fd5b634e487b7160e01b885260218952602488fd5b600191925001541633148238610365565b8490346102f057816003193601126102f05780600a60209252f35b906005821015610f555752565b634e487b7160e01b600052602160045260246000fd5b600435906001600160a01b0382168203610f8157565b600080fd5b6020908160408183019282815285518094520193019160005b828110610fad575050505090565b835185529381019392810192600101610f9f565b8054821015610fd95760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60015460081c6001600160a01b0316330361100657565b60405163118cdaa760e01b8152336004820152602490fd5b60e0810190811067ffffffffffffffff82111761103a57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761103a57604052565b80546801000000000000000081101561103a5761109491600182018155610fc1565b819291549060031b91821b91600019901b1916179055565b906000602091828151910182855af115611108576000513d6110ff57506001600160a01b0381163b155b6110dd5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156110d6565b6040513d6000823e3d90fd5b60ff6001541661112057565b60405163d93c066560e01b8152600490fd5b600260005414611143576002600055565b604051633ee5aeb560e01b8152600490fd5b1561115c57565b60405162461bcd60e51b815260206004820152601760248201527f4e6f742073657373696f6e207061727469636970616e740000000000000000006044820152606490fd5b156111a857565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642073657373696f6e2073746174757360501b6044820152606490fd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152608081019167ffffffffffffffff83118284101761103a57611236926040526110ac565b56fea164736f6c6343000814000a",
  "deployedBytecode": "0x6080604081815260048036101561001557600080fd5b600092833560e01c9081631554823214610f2d575080631f5754c014610d885780633f4ba83a14610d1f578063402ff0db14610c0857806349bbf7da14610beb57806357520d2014610b775780635c975abb14610b53578063664ba84b14610b0b57806367b3fcb014610aef57806368c4ac2614610ab15780636d69fcaf14610a07578063715018a6146109a6578063763191901461094057806383c4b7a3146108c05780638456cb591461086657806387c139431461084a5780638da5cb5b1461081d578063ab3dd949146107c4578063cd2bf12414610460578063e27f93701461031d578063eb13554f146102f4578063ec59877e1461026e578063f2fde38b146101d25763f5fe7f711461012b57600080fd5b346101ce5760203660031901126101ce57610144610f6b565b61014c610fef565b6001600160a01b0316918215610197575050600380546001600160a01b031916821790557fba887708e7d4436dd36b62187bdced03e0b9abe66caf392a66dd84386641b2098280a280f35b906020606492519162461bcd60e51b83528201526011602482015270125b9d985b1a59081c9958da5c1a595b9d607a1b6044820152fd5b8280fd5b50346101ce5760203660031901126101ce576101ec610f6b565b6101f4610fef565b6001600160a01b0381811693909290841561025857505060018054610100600160a81b03198116600893841b610100600160a81b031617909155901c167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101859052602490fd5b5050346102f057602090816003193601126101ce576001600160a01b03610293610f6b565b168352600782528083209281518093808654928381520195835280832092905b8282106102d9576102d586866102cb828b0383611050565b5191829182610f86565b0390f35b8354875295860195600193840193909101906102b3565b5080fd5b5050346102f057816003193601126102f05760035490516001600160a01b039091168152602090f35b508290346102f05760203660031901126102f05780359061033c611132565b818352600560205283832080546001600160a01b03929161036c9184163314908490821561044f575b5050611155565b828452600560205284842090600682019081549060ff8216600581101561043c57600161039991146111a1565b808401544210156103f957509060036103ce94939260ff191617905560038260028301541692600183015416910154916111e6565b7f83db11557caa3518e394ee3589033b042b4f03f0ed0495a829208e71bfa37f058280a26001815580f35b606490602089519162461bcd60e51b8352820152601760248201527f53657373696f6e20616c726561647920737461727465640000000000000000006044820152fd5b634e487b7160e01b885260218252602488fd5b600191925001541633148388610365565b50346101ce5760a03660031901126101ce5761047a610f6b565b6001600160a01b03939092906024803586811691908290036101ce5760443594606495863590608435926104ac611132565b6104b4611114565b85875260209960028b5260ff89892054161561078d578b169485151580610783575b1561075157821561071f57428411156106e95784156106b5578154996000198b146106a3578888888f8f968f96988f969160059a8c9360018f96888f8f8f8f8f918f9196808f96988f96958f969a8f9b60069c8e8801905583519b61053a8d61101e565b8c52808c0196338852848d0198895260608d01998a5260808d019a8b5260a08d019b8c5260c08d019e8f5283525220975116916bffffffffffffffffffffffff60a01b9283895416178855816001890191511683825416179055600287019251169082541617905551600384015551878301555160058201550190519d8e1015610691578c9d60ff8019835416911617905586895260068c526105df8b8b8b20611072565b33895260078c526105f28b8b8b20611072565b83818b519e8f906323b872dd60e01b90820152338582015230604482015201528c5260a08c01918c831067ffffffffffffffff8411176106805750508798999a6106409160019952866110ac565b875194855289850152868401526060830152857fafb30f2fb7b1a22d2c1ebce5ade2b90ae0f6d539e804ce2e60f6a900ac3a4b4960803394a45551908152f35b634e487b7160e01b89526041905287fd5b634e487b7160e01b8a5260218452828afd5b50634e487b7160e01b88526011825287fd5b885162461bcd60e51b81529182018b90526010908201526f24b73b30b634b210323ab930ba34b7b760811b60448201528890fd5b885162461bcd60e51b81529182018b905260129082015271496e76616c69642073746172742074696d6560701b60448201528890fd5b885162461bcd60e51b81529182018b9052600e908201526d125b9d985b1a5908185b5bdd5b9d60921b60448201528890fd5b885162461bcd60e51b81529182018b9052600e908201526d24b73b30b634b21036b2b73a37b960911b60448201528890fd5b50338614156104d6565b885162461bcd60e51b81528083018c905260138188015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b60448201528a90fd5b5050346102f057806003193601126102f0576107de610f6b565b6001600160a01b0316825260066020528082208054602435939084101561081a575060209261080c91610fc1565b91905490519160031b1c8152f35b80fd5b5050346102f057816003193601126102f057600154905160089190911c6001600160a01b03168152602090f35b5050346102f057816003193601126102f0576020905160648152f35b5050346102f057816003193601126102f05760207f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258916108a4610fef565b6108ac611114565b600160ff198154161760015551338152a180f35b5090346101ce5760203660031901126101ce578061093e9160e0948435815260056020522060018060a01b0391828254169483600184015416936002840154166003840154918401549260ff600660058701549601541695815198895260208901528701526060860152608085015260a084015260c0830190610f48565bf35b5050346102f05760203660031901126102f05761095b610f6b565b610963610fef565b6001600160a01b03168083526002602052908220805460ff191690557f4c910b69fe65a61f7531b9c5042b2329ca7179c77290aa7e2eb3afa3c8511fd38280a280f35b833461081a578060031936011261081a576109bf610fef565b60018054610100600160a81b03198116909155819060081c6001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5090346101ce5760203660031901126101ce57610a22610f6b565b610a2a610fef565b6001600160a01b0316918215610a77575081835260026020528220805460ff191660011790557f784c8f4dbf0ffedd6e72c76501c545a70f8b203b30a26ce542bf92ba87c248a48280a280f35b6020606492519162461bcd60e51b83528201526015602482015274496e76616c696420746f6b656e206164647265737360581b6044820152fd5b5050346102f05760203660031901126102f05760209160ff9082906001600160a01b03610adc610f6b565b1681526002855220541690519015158152f35b5050346102f057816003193601126102f05760209051605a8152f35b5050346102f057806003193601126102f057610b25610f6b565b6001600160a01b0316825260076020528082208054602435939084101561081a575060209261080c91610fc1565b5050346102f057816003193601126102f05760209060ff6001541690519015158152f35b5050346102f057602090816003193601126101ce576001600160a01b03610b9c610f6b565b168352600682528083209281518093808654928381520195835280832092905b828210610bd4576102d586866102cb828b0383611050565b835487529586019560019384019390910190610bbc565b50346101ce57826003193601126101ce5760209250549051908152f35b50913461081a57602036600319011261081a578060c08351610c298161101e565b82815282602082015282858201528260608201528260808201528260a08201520152823581526005602052818120825192610c638461101e565b60018060a01b0380835416855280600184015416916020860192835281600285015416918187019283526003850154926060880193845288860154946080890195865260ff600660058901549860a08c01998a5201541660c08a01986005821015610d0c5760e08b61093e8c8c8c8c8c8c8c818d8d89528185519b51168b52511660208a01525116908701525160608601525160808501525160a08401525160c0830190610f48565b634e487b7160e01b815260218c52602490fd5b50346101ce57826003193601126101ce57610d38610fef565b6001549060ff821615610d7a575060ff1916600155513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa90602090a180f35b8251638dfc202b60e01b8152fd5b509190346102f05760203660031901126102f057823590610da7611132565b818352600560205280832080546001600160a01b0391610dd591831633149083908215610f1c575050611155565b828452600560205281842060068101805460ff81166005811015610f09576001610dff91146111a1565b8783015460058401548101809111610ef6574210610ebc5760029060ff1916179055600381015491600a8302838104600a1484151715610ea9576064900491828403938411610ea957828285949383610e8a7fdd106c9c3f24f80fe23b63d807dbc109af232921a35b6df85d12be9877f8ab3599986002610e979701928480855416915416906111e6565b54169060035416906111e6565b82519182526020820152a26001815580f35b634e487b7160e01b875260118852602487fd5b845162461bcd60e51b81526020818a0152601460248201527314d95cdcda5bdb881b9bdd08199a5b9a5cda195960621b6044820152606490fd5b634e487b7160e01b885260118952602488fd5b634e487b7160e01b885260218952602488fd5b600191925001541633148238610365565b8490346102f057816003193601126102f05780600a60209252f35b906005821015610f555752565b634e487b7160e01b600052602160045260246000fd5b600435906001600160a01b0382168203610f8157565b600080fd5b6020908160408183019282815285518094520193019160005b828110610fad575050505090565b835185529381019392810192600101610f9f565b8054821015610fd95760005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b60015460081c6001600160a01b0316330361100657565b60405163118cdaa760e01b8152336004820152602490fd5b60e0810190811067ffffffffffffffff82111761103a57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761103a57604052565b80546801000000000000000081101561103a5761109491600182018155610fc1565b819291549060031b91821b91600019901b1916179055565b906000602091828151910182855af115611108576000513d6110ff57506001600160a01b0381163b155b6110dd5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156110d6565b6040513d6000823e3d90fd5b60ff6001541661112057565b60405163d93c066560e01b8152600490fd5b600260005414611143576002600055565b604051633ee5aeb560e01b8152600490fd5b1561115c57565b60405162461bcd60e51b815260206004820152601760248201527f4e6f742073657373696f6e207061727469636970616e740000000000000000006044820152606490fd5b156111a857565b60405162461bcd60e51b8152602060048201526016602482015275496e76616c69642073657373696f6e2073746174757360501b6044820152606490fd5b60405163a9059cbb60e01b60208201526001600160a01b039092166024830152604480830193909352918152608081019167ffffffffffffffff83118284101761103a57611236926040526110ac565b56fea164736f6c6343000814000a",
  "devdoc": {
    "details": "Smart contract for Chain Academy V2 mentorship platform Handles escrow, payment distribution, and multi-token support",
    "errors": {
      "EnforcedPause()": [
        {
          "details": "The operation failed because the contract is paused."
        }
      ],
      "ExpectedPause()": [
        {
          "details": "The operation failed because the contract is not paused."
        }
      ],
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ],
      "ReentrancyGuardReentrantCall()": [
        {
          "details": "Unauthorized reentrant call."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC-20 token failed."
        }
      ]
    },
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "addSupportedToken(address)": {
        "details": "Add a supported payment token",
        "params": {
          "token": "Address of the token to add"
        }
      },
      "cancelSession(uint256)": {
        "details": "Cancel a mentorship session before it starts",
        "params": {
          "sessionId": "ID of the session to cancel"
        }
      },
      "completeSession(uint256)": {
        "details": "Complete a mentorship session and distribute payments",
        "params": {
          "sessionId": "ID of the session to complete"
        }
      },
      "constructor": {
        "details": "Constructor",
        "params": {
          "_platformFeeRecipient": "Address to receive platform fees"
        }
      },
      "createSession(address,address,uint256,uint256,uint256)": {
        "details": "Create a new mentorship session with escrow",
        "params": {
          "amount": "Payment amount",
          "duration": "Session duration in seconds",
          "mentor": "Address of the mentor",
          "paymentToken": "Address of the payment token (USDT/USDC)",
          "startTime": "Session start time"
        }
      },
      "getMenteeSessions(address)": {
        "details": "Get mentee's session IDs",
        "params": {
          "mentee": "Address of the mentee"
        }
      },
      "getMentorSessions(address)": {
        "details": "Get mentor's session IDs",
        "params": {
          "mentor": "Address of the mentor"
        }
      },
      "getSession(uint256)": {
        "details": "Get session details",
        "params": {
          "sessionId": "ID of the session"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Pause the contract"
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "removeSupportedToken(address)": {
        "details": "Remove a supported payment token",
        "params": {
          "token": "Address of the token to remove"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Unpause the contract"
      },
      "updatePlatformFeeRecipient(address)": {
        "details": "Update platform fee recipient",
        "params": {
          "newRecipient": "New recipient address"
        }
      }
    },
    "title": "Mentorship",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1606,
        "contract": "contracts/Mentorship.sol:Mentorship",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1496,
        "contract": "contracts/Mentorship.sol:Mentorship",
        "label": "_paused",
        "offset": 0,
        "slot": "1",
        "type": "t_bool"
      },
      {
        "astId": 8,
        "contract": "contracts/Mentorship.sol:Mentorship",
        "label": "_owner",
        "offset": 1,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1707,
        "contract": "contracts/Mentorship.sol:Mentorship",
        "label": "supportedTokens",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1709,
        "contract": "contracts/Mentorship.sol:Mentorship",
        "label": "platformFeeRecipient",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 1733,
        "contract": "contracts/Mentorship.sol:Mentorship",
        "label": "nextSessionId",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 1738,
        "contract": "contracts/Mentorship.sol:Mentorship",
        "label": "sessions",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(MentorshipSession)1725_storage)"
      },
      {
        "astId": 1743,
        "contract": "contracts/Mentorship.sol:Mentorship",
        "label": "mentorSessions",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      },
      {
        "astId": 1748,
        "contract": "contracts/Mentorship.sol:Mentorship",
        "label": "menteeSessions",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(SessionStatus)1731": {
        "encoding": "inplace",
        "label": "enum Mentorship.SessionStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256[])",
        "numberOfBytes": "32",
        "value": "t_array(t_uint256)dyn_storage"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(MentorshipSession)1725_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Mentorship.MentorshipSession)",
        "numberOfBytes": "32",
        "value": "t_struct(MentorshipSession)1725_storage"
      },
      "t_struct(MentorshipSession)1725_storage": {
        "encoding": "inplace",
        "label": "struct Mentorship.MentorshipSession",
        "members": [
          {
            "astId": 1711,
            "contract": "contracts/Mentorship.sol:Mentorship",
            "label": "mentor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 1713,
            "contract": "contracts/Mentorship.sol:Mentorship",
            "label": "mentee",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1715,
            "contract": "contracts/Mentorship.sol:Mentorship",
            "label": "paymentToken",
            "offset": 0,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 1717,
            "contract": "contracts/Mentorship.sol:Mentorship",
            "label": "amount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 1719,
            "contract": "contracts/Mentorship.sol:Mentorship",
            "label": "startTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 1721,
            "contract": "contracts/Mentorship.sol:Mentorship",
            "label": "duration",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 1724,
            "contract": "contracts/Mentorship.sol:Mentorship",
            "label": "status",
            "offset": 0,
            "slot": "6",
            "type": "t_enum(SessionStatus)1731"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
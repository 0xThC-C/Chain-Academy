{
  "permissions": {
    "allow": [
      "Bash(cp:*)",
      "Bash(claude mcp)",
      "Bash(claude mcp list)",
      "Bash(claude mcp:*)",
      "Bash(exit)",
      "mcp__filesystem-cyanheads__create_directory",
      "Bash(mkdir:*)",
      "Bash(mkdir:*)",
      "mcp__filesystem-cyanheads__set_filesystem_default",
      "Bash(npm init:*)",
      "Bash(npx create-react-app:*)",
      "Bash(npm install:*)",
      "Bash(rm:*)",
      "Bash(npm install:*)",
      "mcp__filesystem-cyanheads__write_file",
      "Bash(npx tailwindcss init:*)",
      "Bash(./node_modules/.bin/tailwindcss:*)",
      "Bash(touch:*)",
      "Bash(ls:*)",
      "Bash(find:*)",
      "Bash(npm run compile:*)",
      "Bash(npm run build:*)",
      "Bash(tree:*)",
      "Bash(timeout 10s npm start)",
      "Bash(npm test)",
      "Bash(npm run deploy:local:*)",
      "Bash(chmod:*)",
      "Bash(pkill:*)",
      "Bash(npm run dev:*)",
      "Bash(curl:*)",
      "Bash(HOST=127.0.0.1 npm start)",
      "WebFetch(domain:127.0.0.1)",
      "mcp__filesystem-official__read_multiple_files",
      "Bash(grep:*)",
      "Bash(timeout 30s npm run build)",
      "Bash(rg:*)",
      "Bash(timeout 60s npm run build)",
      "Bash(timeout:*)",
      "mcp__filesystem-official__list_directory",
      "mcp__filesystem-official__read_file",
      "mcp__filesystem-official__edit_file",
      "Bash(true)",
      "Bash(npm start)",
      "Bash(npx eslint:*)",
      "Bash(npx tsc:*)",
      "Bash(kill:*)",
      "Bash(node:*)",
      "mcp__filesystem-cyanheads__list_files",
      "mcp__filesystem-cyanheads__read_file",
      "mcp__filesystem-official__search_files",
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__filesystem-official__directory_tree",
      "Bash(cat:*)",
      "Bash(./start-services.sh:*)",
      "Bash(./test-persistence.sh:*)",
      "Bash(./start-frontend.sh:*)",
      "Bash(pm2 logs:*)",
      "Bash(pm2 restart:*)",
      "mcp__desktop-commander__edit_block",
      "Bash(npm run lint:*)",
      "Bash(./start.sh:*)",
      "mcp__ide__getDiagnostics",
      "mcp__desktop-commander__execute_command",
      "mcp__desktop-commander__force_terminate",
      "Bash(echo $HOST)",
      "Bash(unset HOST)",
      "Bash(PORT=3001 npm start)",
      "Bash(fuser:*)",
      "mcp__desktop-commander__write_file",
      "mcp__desktop-commander__read_output",
      "Bash(pm2 status:*)",
      "Bash(PORT=3000 npm start)",
      "Bash(pm2 reload:*)",
      "Bash(./open-browser.sh:*)",
      "WebFetch(domain:github.com)",
      "Bash(git clone:*)",
      "Bash(export PATH=\"$HOME/.local/bin:$PATH\")",
      "Bash(uv venv:*)",
      "Bash(source:*)",
      "Bash(/home/mathewsl/.local/bin/uv pip install:*)",
      "mcp__filesystem-official__write_file",
      "Bash(.venv/bin/python -m mem0_mcp:*)",
      "mcp__filesystem-official__get_file_info",
      "Bash(/home/mathewsl/Chain\\ Academy\\ V2/tools/mem0-mcp/.venv/bin/python --version)",
      "Bash(/home/mathewsl/Chain Academy V2/tools/mem0-mcp/.venv/bin/pip list)",
      "Bash(/home/mathewsl/Chain Academy V2/tools/mem0-mcp/.venv/bin/python main.py)",
      "Bash(/home/mathewsl/Chain Academy V2/tools/mem0-mcp/.venv/bin/python -c \"import mcp.server.stdio; print(''MCP stdio support available'')\")",
      "Bash(/home/mathewsl/Chain Academy V2/tools/mem0-mcp/.venv/bin/python main_claude.py)",
      "Bash(claude-code config list)",
      "Bash(claude config list)",
      "Bash(\"/home/mathewsl/Chain Academy V2/tools/mem0-mcp/.venv/bin/python\" --version)",
      "Bash(MEM0_API_KEY=\"m0-FVNPT8VZOlFDTdTjEPi05EiAgSqgG0XKJZ3o7HC4\" .venv/bin/python main_claude.py --help)",
      "Bash(npx @modelcontextprotocol/server-memory:*)",
      "Bash(jq:*)",
      "Bash(npx hardhat:*)",
      "Bash(sed:*)",
      "Bash(mv:*)",
      "Bash(npm test:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__resolve-library-id",
      "mcp__context7__resolve-library-id",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(pm2 start:*)",
      "Bash(ss:*)",
      "Bash(pm2 describe:*)",
      "Bash(pm2 list:*)",
      "Bash(pm2 stop:*)",
      "Bash(pm2 delete:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm audit:*)",
      "Bash(npm run security:validate:*)",
      "Bash(HOST=127.0.0.1 PORT=3000 npm start)",
      "Bash(npm i:*)",
      "Bash(npm ls:*)",
      "Bash(SKIP_PREFLIGHT_CHECK=true npm start)",
      "Bash(npx react-scripts:*)",
      "Bash(npm run start:vite:*)",
      "Bash(npx patch-package:*)",
      "Bash(/dev/null)",
      "Bash(npm run check:pre-deploy:*)",
      "Bash(npm run testnet:validate:*)",
      "Bash(npm run testnet:deploy:*)",
      "Bash(npm run check:wallet:*)",
      "Bash(npm run deploy:sepolia-simple:*)",
      "Bash(PRIVATE_KEY=b50677655e339cb2d4504348dab2c6a6a3b5f5762508d9673fff4ffee40ddc94 npx hardhat run scripts/test-connection.js --network sepolia)",
      "Bash(PRIVATE_KEY=b50677655e339cb2d4504348dab2c6a6a3b5f5762508d9673fff4ffee40ddc94 npx hardhat run scripts/deploy-v6.js --network sepolia)",
      "Bash(PRIVATE_KEY=b50677655e339cb2d4504348dab2c6a6a3b5f5762508d9673fff4ffee40ddc94 npx hardhat run scripts/deploy-final.js --network sepolia)",
      "Bash(npm run deploy:sepolia:*)",
      "Bash(echo)",
      "Bash(PRIVATE_KEY=b50677655e339cb2d4504348dab2c6a6a3b5f5762508d9673fff4ffee40ddc94 npx hardhat run --network sepolia -c '\nconst hre = require(\"\"hardhat\"\");\nasync function main() {\n  const escrowAddress = \"\"0xa161C5F6B18120269c279D31A7FEcAFb86c737EC\"\";\n  const usdcAddress = \"\"0x556C875376950B70E0b5A670c9f15885093002B9\"\";\n  \n  const escrow = await hre.ethers.getContractAt(\"\"ProgressiveEscrowV3\"\", escrowAddress);\n  \n  try {\n    const tx = await escrow.addSupportedToken(usdcAddress, { gasLimit: 100000 });\n    await tx.wait();\n    console.log(\"\"✅ Added USDC as supported token\"\");\n  } catch (error) {\n    console.log(\"\"ℹ️ USDC might already be supported:\"\", error.message);\n  }\n}\nmain().catch(console.error);\n' /dev/stdin)",
      "Bash(PRIVATE_KEY=b50677655e339cb2d4504348dab2c6a6a3b5f5762508d9673fff4ffee40ddc94 npx hardhat run scripts/add-usdc.js --network sepolia)",
      "mcp__desktop-commander__read_file",
      "mcp__desktop-commander__list_directory",
      "mcp__desktop-commander__search_files",
      "Bash(HARDHAT_NETWORK=sepolia timeout 30 node scripts/check-token-balances.js 0x527162328cb3072c31Ad853dE00C799A64658951)",
      "Bash(HARDHAT_NETWORK=sepolia timeout 60 node scripts/mint-tokens.js 0x527162328cb3072c31Ad853dE00C799A64658951 100)",
      "mcp__desktop-commander__search_code",
      "Bash(PRIVATE_KEY=b50677655e339cb2d4504348dab2c6a6a3b5f5762508d9673fff4ffee40ddc94 npx hardhat run scripts/deploy-escrow-v4.js --network sepolia)",
      "WebFetch(domain:sepolia.etherscan.io)",
      "Bash(npx kill-port:*)",
      "Bash(./verify-fix.sh:*)",
      "WebFetch(domain:basescan.org)",
      "WebFetch(domain:docs.base.org)",
      "Bash(./scripts/start-bot.sh:*)",
      "Bash(npm run:*)",
      "Bash(vercel:*)",
      "Bash(tar:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(git rm:*)",
      "Bash(git push:*)",
      "Bash(npx tailwindcss:*)",
      "WebFetch(domain:arbiscan.io)",
      "Bash(python3:*)",
      "Bash(npm update:*)",
      "Bash(cast call:*)"
    ],
    "deny": []
  }
}